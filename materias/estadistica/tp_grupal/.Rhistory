facet_wrap(~ variable, scales = "free_y") +  # Un panel por variable
theme_bw() +
theme(legend.position = "none") +
labs(
title = "Distribución de variables por Condición de Fumador",
x = "Fuma",
y = "Valor"
)
)
seguros_long_Region <- datos %>%
select(Edad, IMC, Region, ingreso, premio) %>%
pivot_longer(cols = -Region, names_to = "variable", values_to = "valor")
ggplotly(
ggplot(seguros_long_Region, aes(x = Region, y = valor, fill = Region)) +
geom_boxplot(alpha = 0.7) +
facet_wrap(~ variable, scales = "free_y") +  # Un panel por variable
theme_bw() +
theme(legend.position = "none") +
labs(
title = "Distribución de variables por Region",
x = "Región",
y = "Valor"
)
)
summary(datos)
# Lo eliminamos
#datos <- datos %>% filter(premio != max(premio))
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
eval = TRUE,
fig.width = 6,
fig.height = 4,
fig.align = "center",
class.source = "badCode")
options(width = 90)
library(readxl)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(hrbrthemes)
library(plotly)
library(tidyr)
library(tidyverse)
library(scales)
library(corrplot)
library(car)
library(nortest)
library(tseries)
# Borramos ambiente de trabajo
rm(list = ls())
# Seteamos directorio de trabajo
setwd("/Users/ppando/Materias/data/materias/estadistica/tp_grupal")
# Cargamos datos del archivo
datos <- read_xlsx("seguros.xlsx")
# Mostramos los primeros 6 casos
head(datos)
# Mostramos estructura de los datos
str(datos)
# Contamos número de nulos por variables (columnas)
sapply(datos, function(x) sum(is.na(x)))
# Eliminamos casos (filas) con nulos
datos <- datos[!is.na(datos$Fuma),]
# Verificamos que el caso con nulos fue eliminado
sapply(datos, function(x) sum(is.na(x)))
seguros_long_Genero <- datos %>%
select(Edad, Genero, IMC, ingreso, premio) %>%
pivot_longer(cols = -Genero, names_to = "variable", values_to = "valor")
ggplotly(
ggplot(seguros_long_Genero, aes(x = Genero, y = valor, fill = Genero)) +
geom_boxplot(alpha = 0.7) +
facet_wrap(~ variable, scales = "free_y") +  # Un panel por variable
theme_bw() +
theme(legend.position = "none") +
labs(
title = "Distribución de variables por Genero",
x = "Género",
y = "Valor"
)
)
seguros_long_Fuma <- datos %>%
select(Edad, IMC, Fuma, ingreso, premio) %>%
pivot_longer(cols = -Fuma, names_to = "variable", values_to = "valor")
ggplotly(
ggplot(seguros_long_Fuma, aes(x = Fuma, y = valor, fill = Fuma)) +
geom_boxplot(alpha = 0.7) +
facet_wrap(~ variable, scales = "free_y") +  # Un panel por variable
theme_bw() +
theme(legend.position = "none") +
labs(
title = "Distribución de variables por Condición de Fumador",
x = "Fuma",
y = "Valor"
)
)
seguros_long_Region <- datos %>%
select(Edad, IMC, Region, ingreso, premio) %>%
pivot_longer(cols = -Region, names_to = "variable", values_to = "valor")
ggplotly(
ggplot(seguros_long_Region, aes(x = Region, y = valor, fill = Region)) +
geom_boxplot(alpha = 0.7) +
facet_wrap(~ variable, scales = "free_y") +  # Un panel por variable
theme_bw() +
theme(legend.position = "none") +
labs(
title = "Distribución de variables por Region",
x = "Región",
y = "Valor"
)
)
summary(datos)
# Lo eliminamos
datos <- datos %>% filter(premio != max(premio))
gplot = datos %>% filter(Genero == "femenino") %>%
ggplot(mapping = aes(x=Region, y=premio, color=Fuma)) +
geom_point() +
stat_summary(fun ="mean", geom="crossbar", color="red", linewidth=0.5) +
theme_bw() + xlab("Region") + ylab("Premio")
ggplotly(gplot)
# Lo eliminamos
datos <- datos %>% filter(premio != max(premio))
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
eval = TRUE,
fig.width = 6,
fig.height = 4,
fig.align = "center",
class.source = "badCode")
options(width = 90)
library(readxl)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(hrbrthemes)
library(plotly)
library(tidyr)
library(tidyverse)
library(scales)
library(corrplot)
library(car)
library(nortest)
library(tseries)
# Borramos ambiente de trabajo
rm(list = ls())
# Seteamos directorio de trabajo
setwd("/Users/ppando/Materias/data/materias/estadistica/tp_grupal")
# Cargamos datos del archivo
datos <- read_xlsx("seguros.xlsx")
# Mostramos los primeros 6 casos
head(datos)
# Mostramos estructura de los datos
str(datos)
# Contamos número de nulos por variables (columnas)
sapply(datos, function(x) sum(is.na(x)))
# Eliminamos casos (filas) con nulos
datos <- datos[!is.na(datos$Fuma),]
# Verificamos que el caso con nulos fue eliminado
sapply(datos, function(x) sum(is.na(x)))
seguros_long_Genero <- datos %>%
select(Edad, Genero, IMC, ingreso, premio) %>%
pivot_longer(cols = -Genero, names_to = "variable", values_to = "valor")
ggplotly(
ggplot(seguros_long_Genero, aes(x = Genero, y = valor, fill = Genero)) +
geom_boxplot(alpha = 0.7) +
facet_wrap(~ variable, scales = "free_y") +  # Un panel por variable
theme_bw() +
theme(legend.position = "none") +
labs(
title = "Distribución de variables por Genero",
x = "Género",
y = "Valor"
)
)
seguros_long_Fuma <- datos %>%
select(Edad, IMC, Fuma, ingreso, premio) %>%
pivot_longer(cols = -Fuma, names_to = "variable", values_to = "valor")
ggplotly(
ggplot(seguros_long_Fuma, aes(x = Fuma, y = valor, fill = Fuma)) +
geom_boxplot(alpha = 0.7) +
facet_wrap(~ variable, scales = "free_y") +  # Un panel por variable
theme_bw() +
theme(legend.position = "none") +
labs(
title = "Distribución de variables por Condición de Fumador",
x = "Fuma",
y = "Valor"
)
)
seguros_long_Region <- datos %>%
select(Edad, IMC, Region, ingreso, premio) %>%
pivot_longer(cols = -Region, names_to = "variable", values_to = "valor")
ggplotly(
ggplot(seguros_long_Region, aes(x = Region, y = valor, fill = Region)) +
geom_boxplot(alpha = 0.7) +
facet_wrap(~ variable, scales = "free_y") +  # Un panel por variable
theme_bw() +
theme(legend.position = "none") +
labs(
title = "Distribución de variables por Region",
x = "Región",
y = "Valor"
)
)
gplot = datos %>% filter(Genero == "femenino") %>%
ggplot(mapping = aes(x=Region, y=premio, color=Fuma)) +
geom_point() +
stat_summary(fun ="mean", geom="crossbar", color="red", linewidth=0.5) +
theme_bw() + xlab("Region") + ylab("Premio")
ggplotly(gplot)
# Lo eliminamos
datos <- datos %>% filter(premio != max(premio))
# Declaramos a las variables cualitativas como factor, para poder reconocer categorias
datos$Genero <- as.factor(datos$Genero)
datos$Fuma <- as.factor(datos$Fuma)
datos$Region <- as.factor(datos$Region)
# Mostramos medidas resumen
summary(datos)
# Declaramos a las variables cualitativas como factor, para poder reconocer categorias
datos$Genero <- as.factor(datos$Genero)
datos$Fuma <- as.factor(datos$Fuma)
datos$Region <- as.factor(datos$Region)
# Mostramos medidas resumen
summary(datos)
# Volvemos a mostrar graficamente las medidas resumen de las variables cuantis agrupadas por las variables cualis
seguros_long_Genero <- datos %>%
select(Edad, Genero, IMC, ingreso, premio) %>%
pivot_longer(cols = -Genero, names_to = "variable", values_to = "valor")
ggplotly(
ggplot(seguros_long_Genero, aes(x = Genero, y = valor, fill = Genero)) +
geom_boxplot(alpha = 0.7) +
facet_wrap(~ variable, scales = "free_y") +  # Un panel por variable
theme_bw() +
theme(legend.position = "none") +
labs(
title = "Distribución de variables por Genero",
x = "Género",
y = "Valor"
)
)
seguros_long_Fuma <- datos %>%
select(Edad, IMC, Fuma, ingreso, premio) %>%
pivot_longer(cols = -Fuma, names_to = "variable", values_to = "valor")
ggplotly(
ggplot(seguros_long_Fuma, aes(x = Fuma, y = valor, fill = Fuma)) +
geom_boxplot(alpha = 0.7) +
facet_wrap(~ variable, scales = "free_y") +  # Un panel por variable
theme_bw() +
theme(legend.position = "none") +
labs(
title = "Distribución de variables por Condición de Fumador",
x = "Fuma",
y = "Valor"
)
)
seguros_long_Region <- datos %>%
select(Edad, IMC, Region, ingreso, premio) %>%
pivot_longer(cols = -Region, names_to = "variable", values_to = "valor")
ggplotly(
ggplot(seguros_long_Region, aes(x = Region, y = valor, fill = Region)) +
geom_boxplot(alpha = 0.7) +
facet_wrap(~ variable, scales = "free_y") +  # Un panel por variable
theme_bw() +
theme(legend.position = "none") +
labs(
title = "Distribución de variables por Region",
x = "Región",
y = "Valor"
)
)
# Calculamos la matriz de correlación que nos muestra los coeficientes de correlación entre cada para de variables.
datos_numericos <- datos %>% select(Edad, IMC, ingreso, premio)
correlaciones <- cor(datos_numericos)
correlaciones
# Si alguna correlación está cercana a 1 o -1, significa que hay una relación fuerte (positiva
# Valores cercanos a
# 1: Correlación positiva fuerte. A medida que una variable aumenta, la otra también tiende a aumentar.
# -1: Correlación negativa fuerte. Si una variable sube, la otra tiende a bajar.
# 0: Correlación débil o nula. No hay una relación clara entre las variables.
# Definimos una paleta de colores
colores <- colorRampPalette(c("blue", "white", "red"))(200)
# Visualizamos las correlaciones mediante un mapa de calor
corrplot(correlaciones, method = "color", col = colores, addCoef.col = "black")
# Calculamos la matriz de correlación que nos muestra los coeficientes de correlación entre cada para de variables.
datos_numericos <- datos %>% select(Edad, IMC, ingreso, premio)
correlaciones <- cor(datos_numericos)
correlaciones
# Definimos una paleta de colores
colores <- colorRampPalette(c("blue", "white", "red"))(200)
# Visualizamos las correlaciones mediante un mapa de calor
corrplot(correlaciones, method = "color", col = colores, addCoef.col = "black")
# Visualizamos en un gráfico de dispersión la dependencia entre ingreso y premio
gplot = dataset %>%
ggplot(mapping = aes(x=ingreso, y=premio, color=Genero)) +
geom_point() +
geom_smooth(formula= 'y ~ x', method = "lm", se = FALSE, color = "red") +
theme_bw() + xlab("Ingreso") + ylab("Premio") + ggtitle("Relación entre ingreso y premio")
ggplotly(gplot)
# Calculamos la matriz de correlación que nos muestra los coeficientes de correlación entre cada para de variables.
datos_numericos <- datos %>% select(Edad, IMC, ingreso, premio)
correlaciones <- cor(datos_numericos)
correlaciones
# Definimos una paleta de colores
colores <- colorRampPalette(c("blue", "white", "red"))(200)
# Visualizamos las correlaciones mediante un mapa de calor
corrplot(correlaciones, method = "color", col = colores, addCoef.col = "black")
# Visualizamos en un gráfico de dispersión la dependencia entre ingreso y premio
gplot = datos %>%
ggplot(mapping = aes(x=ingreso, y=premio, color=Genero)) +
geom_point() +
geom_smooth(formula= 'y ~ x', method = "lm", se = FALSE, color = "red") +
theme_bw() + xlab("Ingreso") + ylab("Premio") + ggtitle("Relación entre ingreso y premio")
ggplotly(gplot)
# Calculamos la matriz de correlación que nos muestra los coeficientes de correlación entre cada para de variables.
datos_numericos <- datos %>% select(Edad, IMC, ingreso, premio)
correlaciones <- cor(datos_numericos)
correlaciones
# Definimos una paleta de colores
colores <- colorRampPalette(c("blue", "white", "red"))(200)
# Visualizamos las correlaciones mediante un mapa de calor
corrplot(correlaciones, method = "color", col = colores, addCoef.col = "black")
# Visualizamos en un gráfico de dispersión la dependencia entre ingreso y premio
gplot = datos %>%
ggplot(mapping = aes(x=ingreso, y=premio, color=Genero)) +
geom_point() +
geom_smooth(formula= 'y ~ x', method = "lm", se = FALSE, color = "red") +
theme_bw() + xlab("Ingreso") + ylab("Premio") + ggtitle("Relación entre ingreso y premio")
ggplotly(gplot)
# Visualizamos en un gráfico de dispersión la dependencia entre Edad e IMC
gplot = datos %>%
ggplot(mapping = aes(x=Edad, y=IMC, color=Genero)) +
geom_point() +
geom_smooth(formula= 'y ~ x', method = "lm", se = FALSE, color = "red") +
theme_bw() + xlab("Edad") + ylab("IMC") + ggtitle("Relación entre Edad e IMC")
ggplotly(gplot)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
eval = TRUE,
fig.width = 6,
fig.height = 4,
fig.align = "center",
class.source = "badCode")
options(width = 90)
library(readxl)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(hrbrthemes)
library(plotly)
library(tidyr)
library(tidyverse)
library(scales)
library(corrplot)
library(car)
library(nortest)
library(tseries)
# Borramos ambiente de trabajo
rm(list = ls())
# Seteamos directorio de trabajo
setwd("/Users/ppando/Materias/data/materias/estadistica/tp_grupal")
# Cargamos datos del archivo
datos <- read_xlsx("seguros.xlsx")
# Mostramos los primeros 6 casos
head(datos)
# Mostramos estructura de los datos
str(datos)
# Contamos número de nulos por variables (columnas)
sapply(datos, function(x) sum(is.na(x)))
# Eliminamos casos (filas) con nulos
datos <- datos[!is.na(datos$Fuma),]
# Verificamos que el caso con nulos fue eliminado
sapply(datos, function(x) sum(is.na(x)))
seguros_long_Genero <- datos %>%
select(Edad, Genero, IMC, ingreso, premio) %>%
pivot_longer(cols = -Genero, names_to = "variable", values_to = "valor")
ggplotly(
ggplot(seguros_long_Genero, aes(x = Genero, y = valor, fill = Genero)) +
geom_boxplot(alpha = 0.7) +
facet_wrap(~ variable, scales = "free_y") +  # Un panel por variable
theme_bw() +
theme(legend.position = "none") +
labs(
title = "Distribución de variables por Genero",
x = "Género",
y = "Valor"
)
)
seguros_long_Fuma <- datos %>%
select(Edad, IMC, Fuma, ingreso, premio) %>%
pivot_longer(cols = -Fuma, names_to = "variable", values_to = "valor")
ggplotly(
ggplot(seguros_long_Fuma, aes(x = Fuma, y = valor, fill = Fuma)) +
geom_boxplot(alpha = 0.7) +
facet_wrap(~ variable, scales = "free_y") +  # Un panel por variable
theme_bw() +
theme(legend.position = "none") +
labs(
title = "Distribución de variables por Condición de Fumador",
x = "Fuma",
y = "Valor"
)
)
seguros_long_Region <- datos %>%
select(Edad, IMC, Region, ingreso, premio) %>%
pivot_longer(cols = -Region, names_to = "variable", values_to = "valor")
ggplotly(
ggplot(seguros_long_Region, aes(x = Region, y = valor, fill = Region)) +
geom_boxplot(alpha = 0.7) +
facet_wrap(~ variable, scales = "free_y") +  # Un panel por variable
theme_bw() +
theme(legend.position = "none") +
labs(
title = "Distribución de variables por Region",
x = "Región",
y = "Valor"
)
)
gplot = datos %>% filter(Genero == "femenino") %>%
ggplot(mapping = aes(x=Region, y=premio, color=Fuma)) +
geom_point() +
stat_summary(fun ="mean", geom="crossbar", color="red", linewidth=0.5) + # mostramos la media
theme_bw() + xlab("Region") + ylab("Premio")
ggplotly(gplot)
# Lo eliminamos
datos <- datos %>% filter(premio != max(premio))
# Declaramos a las variables cualitativas como factor, para poder reconocer categorias
datos$Genero <- as.factor(datos$Genero)
datos$Fuma <- as.factor(datos$Fuma)
datos$Region <- as.factor(datos$Region)
# Mostramos medidas resumen
summary(datos)
# Volvemos a mostrar graficamente las medidas resumen de las variables cuantis agrupadas por las variables cualis
seguros_long_Genero <- datos %>%
select(Edad, Genero, IMC, ingreso, premio) %>%
pivot_longer(cols = -Genero, names_to = "variable", values_to = "valor")
ggplotly(
ggplot(seguros_long_Genero, aes(x = Genero, y = valor, fill = Genero)) +
geom_boxplot(alpha = 0.7) +
facet_wrap(~ variable, scales = "free_y") +  # Un panel por variable
theme_bw() +
theme(legend.position = "none") +
labs(
title = "Distribución de variables por Genero",
x = "Género",
y = "Valor"
)
)
seguros_long_Fuma <- datos %>%
select(Edad, IMC, Fuma, ingreso, premio) %>%
pivot_longer(cols = -Fuma, names_to = "variable", values_to = "valor")
ggplotly(
ggplot(seguros_long_Fuma, aes(x = Fuma, y = valor, fill = Fuma)) +
geom_boxplot(alpha = 0.7) +
facet_wrap(~ variable, scales = "free_y") +  # Un panel por variable
theme_bw() +
theme(legend.position = "none") +
labs(
title = "Distribución de variables por Condición de Fumador",
x = "Fuma",
y = "Valor"
)
)
seguros_long_Region <- datos %>%
select(Edad, IMC, Region, ingreso, premio) %>%
pivot_longer(cols = -Region, names_to = "variable", values_to = "valor")
ggplotly(
ggplot(seguros_long_Region, aes(x = Region, y = valor, fill = Region)) +
geom_boxplot(alpha = 0.7) +
facet_wrap(~ variable, scales = "free_y") +  # Un panel por variable
theme_bw() +
theme(legend.position = "none") +
labs(
title = "Distribución de variables por Region",
x = "Región",
y = "Valor"
)
)
# Calculamos la matriz de correlación que nos muestra los coeficientes de correlación entre cada para de variables.
datos_numericos <- datos %>% select(Edad, IMC, ingreso, premio)
correlaciones <- cor(datos_numericos)
correlaciones
# Definimos una paleta de colores
colores <- colorRampPalette(c("blue", "white", "red"))(200)
# Visualizamos las correlaciones mediante un mapa de calor
corrplot(correlaciones, method = "color", col = colores, addCoef.col = "black")
# Visualizamos en un gráfico de dispersión la dependencia entre ingreso y premio
gplot = datos %>%
ggplot(mapping = aes(x=ingreso, y=premio, color=Genero)) +
geom_point() +
geom_smooth(formula= 'y ~ x', method = "lm", se = FALSE, color = "red") +
theme_bw() + xlab("Ingreso") + ylab("Premio") + ggtitle("Relación entre ingreso y premio")
ggplotly(gplot)
# Visualizamos en un gráfico de dispersión la dependencia entre Edad e IMC
gplot = datos %>%
ggplot(mapping = aes(x=Edad, y=IMC, color=Genero)) +
geom_point() +
geom_smooth(formula= 'y ~ x', method = "lm", se = FALSE, color = "red") +
theme_bw() + xlab("Edad") + ylab("IMC") + ggtitle("Relación entre Edad e IMC")
ggplotly(gplot)
# Verificamos mediante un QQPlot
gplot <- datos %>%
ggplot(aes(sample = IMC, color = Fuma)) +
geom_qq() + geom_qq_line() +
facet_wrap(~ Fuma) +
ggtitle("QQ-plot de IMC por estado de fumador") +
theme_bw()
ggplotly(gplot)
lillie.test(datos$IMC) # p-valor = 0.1305 (NO hay evidencia para rechazar H0, es decir, no hay evidencia para decir que IMC no es normal)
by(data = datos, INDICES = datos$Fuma, FUN = function(x) { lillie.test(x$IMC) }) # p-valor = 0.1305 (NO hay evidencia para rechazar H0, es decir, no hay evidencia para decir que IMC no es normal)
bartlett.test(IMC ~ Fuma, data=dataset)
bartlett.test(IMC ~ Fuma, data=datos)
