aleatorios <- function() {
repeat {
n <- rbinom(1, 100, 1)
if (n > 90) break
print(n)
}
}
aleatorios()
aleatorios <- function() {
repeat {
n <- rbinom(1, 100, 1)
if (n > 90) break
print(n)
}
}
aleatorios()
aleatorios <- function() {
repeat {
n <- rbinom(1, 100, 1)
if (n > 90) break
print(n)
}
}
aleatorios()
aleatorios()
# Generación de Números Aleatorios
# Escribir un código que use un bucle repeat para generar números aleatorios
# entre 1 y 100 hasta que se genere un número mayor a 90
# Imprimir todos los números generados
aleatorios <- function() {
repeat {
n <- rbinom(1, 100, 1)
if (n > 90) break
print(n)
}
}
aleatorios()
aleatorios()
n <- rbinom(1, 100, 0.50)
aleatorios <- function() {
repeat {
n <- sample(1:100)
if (n > 90) break else print(n)
}
}
aleatorios()
repeat {
n <- sample(1:100)
if (n > 90) break
print(n)
}
aleatorios <- function() {
repeat {
n <- sample(1:100)
if (n > 90) break
print(n)
}
}
base <- airquality
head(base)
install.packages("VIM")
library(VIM)
aggr(base, numbers=T, sortVar=T)
install.packages("mice")
library(mice)
columnas <- c("Ozone", "Solar.R")
imput_data <- mice(base[,names(base) %in% columnas],m = 1,
maxit = 1, method = "mean", print=F)
complete.data <- complete(imput_data)
imput_data
complete.data <- complete(imput_data)
imput_data
complete.data
par(mfrow = c(1, 2))
hist(na.omit(airquality$Ozone),
breaks = 15,
col = NA,
border = "blue",
ylim = c(0, 40),
xlab = "Ozone (ppb)",
ylab = "Frequency",
main = "")
hist(complete.data$Ozone[which(is.na(airquality$Ozone))],
col = NA,
border = "deeppink",
add = TRUE)
hist(na.omit(airquality$Solar.R),
breaks = 15,
col = NA,
border = "blue",
ylim = c(0, 40),
xlab = "Solar.R",
ylab = "Frequency",
main = "")
hist(complete.data$Solar.R[which(is.na(airquality$Solar.R))],
col = NA,
border = "deeppink",
add = TRUE)
xyplot(imput_data,Ozone ~ Solar.R)
aleatorios()
aleatorios <- function() {
repeat {
n <- sample(1:100, 1, replace=TRUE)
if (n > 90) break
print(n)
}
}
aleatorios()
aleatorios <- function() {
repeat {
n <- sample(1:100, 1, replace=TRUE)
if (n > 90) break
print(n)
}
}
aleatorios()
incr_edad <- function() {
e <- as.numeric(readline('Edad: '))
print(e+1)
}
incr_edad <- function() {
e <- as.numeric(readline('Edad: '))
print(e+1)
}
incr_edad()
# En un famoso casino, la ruleta está formada por 18 números negros, 18 rojos y 2 verdes.
# Un jugador tiene un capital de $100 y apuesta $1 al rojo cada vez que juega.
# Si cuando apuesta al rojo sale rojo, entonces recupera su inversión duplicada.
# Si pierde no recupera nada.
# a) Simular una realización de juego de ruleta y a partir de ella
# calcular el capital del jugador al finalizar un juego.
# b) Crear una función cantidad juegos que dada una cantidad Nrep de simulaciones
# del experimento calcule la cantidad de veces que puede jugar el jugador hasta quedarse sin dinero.
# c) Simular 1000 veces el experimento del ítem b y calcular el promedio de los resultados.
# Simulación de una jugada en la ruleta
jugar_ruleta <- function(capital_inicial = 100) {
apuesta <- 1
resultado <- sample(c(rep("rojo", 18), rep("negro", 18), rep("verde", 2)), 1)
if (resultado == "rojo") {
capital_inicial <- capital_inicial + apuesta # Gana y duplica su inversión
} else {
capital_inicial <- capital_inicial - apuesta # Pierde
}
return(capital_inicial)
}
# Función que calcula cuántas veces puede jugar hasta quedarse sin dinero
cantidad_juegos <- function(n_repeticiones, capital_inicial = 100) {
juegos_por_repeticion <- numeric(n_repeticiones)
for (i in 1:n_repeticiones) {
capital <- capital_inicial
juegos <- 0
while (capital > 0) {
capital <- jugar_ruleta(capital)
juegos <- juegos + 1
}
juegos_por_repeticion[i] <- juegos
}
return(juegos_por_repeticion)
}
# Simulación 1000 veces y cálculo del promedio
n_repeticiones <- 1000
resultados <- cantidad_juegos(n_repeticiones)
promedio_juegos <- mean(resultados)
cat(sprintf("Promedio de juegos antes de quedarse sin dinero tras %d simulaciones: %.2f\n",
n_repeticiones, promedio_juegos))
df_graficar_anio <- nombres_arg %>%
filter(
nombre %in% c("Clara", "Rodrigo", "Lucas", "Jessica", "Guillermo",
"Ana", "Ruben", "Erika", "Sebastian", "Federico",
"Alejandra", "Elsa", "Nicolas", "Florencia", "Laura",
"Rodolfo", "Eduardo", "Mariel", "Mariano", "Elisa",
"Nahuel", "Pablo", "Leandro", "Federico", "Yesica", "Christian",
"Carlos", "Leticia", "Matias", "Melania", "Jesus", "Martina", "Diego"),
anio >= 1950,
anio <  2010
) %>%
select(-X) %>%
mutate(decada = anio %/% 10 * 10)
library(dplyr)
df_graficar_anio <- nombres_arg %>%
filter(
nombre %in% c("Clara", "Rodrigo", "Lucas", "Jessica", "Guillermo",
"Ana", "Ruben", "Erika", "Sebastian", "Federico",
"Alejandra", "Elsa", "Nicolas", "Florencia", "Laura",
"Rodolfo", "Eduardo", "Mariel", "Mariano", "Elisa",
"Nahuel", "Pablo", "Leandro", "Federico", "Yesica", "Christian",
"Carlos", "Leticia", "Matias", "Melania", "Jesus", "Martina", "Diego"),
anio >= 1950,
anio <  2010
) %>%
select(-X) %>%
mutate(decada = anio %/% 10 * 10)
library(dplyr)
library(tydr)
library(dplyr)
library(tydr)
library(dplyr)
library(tidyr)
setwd("/Users/ppando/Materias/data/materias/exploracion-visualizacion/R/09-visualizacion")
nombres_arg <- read.table("historico-nombres", sep = ";", header = TRUE)
library(dplyr)
library(tidyr)
setwd("/Users/ppando/Materias/data/materias/exploracion-visualizacion/R/09-visualizacion")
nombres_arg <- read.table("historico-nombres.csv", sep = ";", header = TRUE)
df_graficar_anio <- nombres_arg %>%
filter(
nombre %in% c("Clara", "Rodrigo", "Lucas", "Jessica", "Guillermo",
"Ana", "Ruben", "Erika", "Sebastian", "Federico",
"Alejandra", "Elsa", "Nicolas", "Florencia", "Laura",
"Rodolfo", "Eduardo", "Mariel", "Mariano", "Elisa",
"Nahuel", "Pablo", "Leandro", "Federico", "Yesica", "Christian",
"Carlos", "Leticia", "Matias", "Melania", "Jesus", "Martina", "Diego"),
anio >= 1950,
anio <  2010
) %>%
select(-X) %>%
mutate(decada = anio %/% 10 * 10)
library(dplyr)
library(tidyr)
setwd("/Users/ppando/Materias/data/materias/exploracion-visualizacion/R/09-visualizacion")
nombres_arg <- read.table("historico-nombres.csv", sep = ";", header = TRUE)
head(nombres_arg)
df_graficar_anio <- nombres_arg %>%
filter(
nombre %in% c("Clara", "Rodrigo", "Lucas", "Jessica", "Guillermo",
"Ana", "Ruben", "Erika", "Sebastian", "Federico",
"Alejandra", "Elsa", "Nicolas", "Florencia", "Laura",
"Rodolfo", "Eduardo", "Mariel", "Mariano", "Elisa",
"Nahuel", "Pablo", "Leandro", "Federico", "Yesica", "Christian",
"Carlos", "Leticia", "Matias", "Melania", "Jesus", "Martina", "Diego"),
anio >= 1950,
anio <  2010
) %>%
select(-X) %>%
mutate(decada = anio %/% 10 * 10)
library(dplyr)
library(tidyr)
setwd("/Users/ppando/Materias/data/materias/exploracion-visualizacion/R/09-visualizacion")
nombres_arg <- read.table("historico-nombres.csv", sep = ",", header = TRUE)
head(nombres_arg)
df_graficar_anio <- nombres_arg %>%
filter(
nombre %in% c("Clara", "Rodrigo", "Lucas", "Jessica", "Guillermo",
"Ana", "Ruben", "Erika", "Sebastian", "Federico",
"Alejandra", "Elsa", "Nicolas", "Florencia", "Laura",
"Rodolfo", "Eduardo", "Mariel", "Mariano", "Elisa",
"Nahuel", "Pablo", "Leandro", "Federico", "Yesica", "Christian",
"Carlos", "Leticia", "Matias", "Melania", "Jesus", "Martina", "Diego"),
anio >= 1950,
anio <  2010
) %>%
select(-X) %>%
mutate(decada = anio %/% 10 * 10)
df_graficar_decada <- df_graficar_anio %>%
select(-anio) %>%
group_by(nombre, decada) %>%
summarise(cantidad = sum(cantidad))
nombres <- df_graficar_decada %>%
pivot_wider(names_from = decada, values_from = cantidad)
nombres <- as.data.frame(nombres)
rownames(nombres) <- nombres$nombre
nombres <- nombres[-1]
nombres <- as.matrix(nombres)
heatmap(nombres)
install.packages("plotly")
library(plotly)
library(dplyr)
library(tidyr)
setwd("/Users/ppando/Materias/data/materias/exploracion-visualizacion/R/09-visualizacion")
nombres_arg <- read.table("historico-nombres.csv", sep = ",", header = TRUE)
head(nombres_arg)
library(plotly)
library(dplyr)
library(tidyr)
setwd("/Users/ppando/Materias/data/materias/exploracion-visualizacion/R/09-visualizacion")
nombres_arg <- read.table("historico-nombres.csv", sep = ",", header = TRUE)
head(nombres_arg)
df_graficar_anio <- nombres_arg %>%
filter(
nombre %in% c("Juan", "Maria", "Emilio", "Eva"),
anio >= 1950,
anio <  2010
) %>%
select(-X) %>%
mutate(decada = anio %/% 10 * 10)
df_graficar_decada <- df_graficar_anio %>%
select(-anio) %>%
group_by(nombre, decada) %>%
summarise(cantidad = sum(cantidad))
ggplotly(
ggplot(
data = df_graficar_decada, mapping = aes(x = decada, y= cantidad, fill = nombre)
) +
geom_col(position = "fill")+
theme_classic())
ggplotly(
ggplot(data = df_graficar_anio) +
geom_boxplot(mapping = aes(x = nombre, y = cantidad, fill = nombre)) +
facet_wrap(~decada) +
theme_bw()
)
install.packages("hrbrthemes")
paises <- read.csv("paises.csv", sep =";")
library(hrbrthemes)
paises <- read.csv("Bases de datos/paises.csv", sep =";")
library(hrbrthemes)
paises <- read.csv("paises.csv", sep =";")
p <- paises %>%
ggplot(aes(Tasa_de_crecimiento, y= Poblacion_urbana, size = Poblacion_2020,
color = Continente, text= Pais)) +
geom_point(alpha = 0.7) +
scale_size(range = c(1, 5)) +
theme_ipsum()
ggplotly(p)
install.packages("gganimate")
install.packages("gifski")
library(gganimate)
library(gifski)
anim <- ggplot(
data = df_graficar_anio,
aes(x = anio, y = cantidad, color = nombre)) +
geom_line() +
geom_point() +
theme_classic() +
transition_reveal(anio)
animate(anim, nframes = 200, , fps = 10,
renderer = gifski_renderer("gganim.gif"))
library(dslabs)
data("gapminder")
p <- ggplot(
gapminder,
aes(x = gdp, y=life_expectancy, size = population, colour = continent)
) +
geom_point(show.legend = TRUE, alpha = 0.7) +
scale_color_viridis_d() +
scale_size(range = c(2, 12)) +
scale_x_log10() +
theme_classic() +
labs(x = "GDP per capita", y = "Life expectancy")
library(dslabs)
library(ggplot2)
data("gapminder")
p <- ggplot(
gapminder,
aes(x = gdp, y=life_expectancy, size = population, colour = continent)
) +
geom_point(show.legend = TRUE, alpha = 0.7) +
scale_color_viridis_d() +
scale_size(range = c(2, 12)) +
scale_x_log10() +
theme_classic() +
labs(x = "GDP per capita", y = "Life expectancy")
p + transition_time(year) +
labs(title = "Year: {frame_time}")
library(dslabs)
library(ggplot)
library(dslabs)
library(ggplot2)
data("gapminder")
p <- ggplot(
gapminder,
aes(x = gdp, y=life_expectancy, size = population, colour = continent)
) +
geom_point(show.legend = TRUE, alpha = 0.7) +
scale_color_viridis_d() +
scale_size(range = c(2, 12)) +
scale_x_log10() +
theme_classic() +
labs(x = "GDP per capita", y = "Life expectancy")
p + transition_time(year) +
labs(title = "Year: {frame_time}")
df <- gapminder::gapminder
fig <- df %>%
plot_ly(
x = ~gdpPercap,
y = ~lifeExp,
size = ~pop,
color = ~continent,
frame = ~year,
text = ~country,
hoverinfo = "text",
type = 'scatter',
mode = 'markers'
)
library(plotly)
library(dplyr)
library(tidyr)
df <- gapminder::gapminder
fig <- df %>%
plot_ly(
x = ~gdpPercap,
y = ~lifeExp,
size = ~pop,
color = ~continent,
frame = ~year,
text = ~country,
hoverinfo = "text",
type = 'scatter',
mode = 'markers'
)
fig <- fig %>% layout(
xaxis = list(
type = "log"
)
)
fig
setwd("/Users/ppando/Materias/data/materias/exploracion-visualizacion/R/10-plotly-gganimate")
titanic <- read.table("titanic.csv", sep = ",", header = TRUE)
head(titanic)
View(titanic)
library(plotly)
library(dplyr)
library(tidyr)
setwd("/Users/ppando/Materias/data/materias/exploracion-visualizacion/R/10-plotly-gganimate")
nombres_arg <- read.table("historico-nombres.csv", sep = ",", header = TRUE)
head(nombres_arg)
df_graficar_anio <- nombres_arg %>%
filter(
nombre %in% c("Juan", "Maria", "Emilio", "Eva"),
anio >= 1950,
anio <  2010
) %>%
select(-X) %>%
mutate(decada = anio %/% 10 * 10)
df_graficar_decada <- df_graficar_anio %>%
select(-anio) %>%
group_by(nombre, decada) %>%
summarise(cantidad = sum(cantidad))
ggplotly(
ggplot(
data = df_graficar_decada, mapping = aes(x = decada, y= cantidad, fill = nombre)
) +
geom_col(position = "fill")+
theme_classic())
ggplotly(
ggplot(data = df_graficar_anio) +
geom_boxplot(mapping = aes(x = nombre, y = cantidad, fill = nombre)) +
facet_wrap(~decada) +
theme_bw()
)
setwd("/Users/ppando/Materias/data/materias/exploracion-visualizacion/R/10-plotly-gganimate")
titanic <- read.table("titanic.csv", sep = ",", header = TRUE)
head(titanic)
sobrevivientes <- titanic %>% filter(Survived == 1)
hist(sobrevivientes$Pclass,
main = "Histograma de Sobrevivientes por clase",
xlab = "Clases",
ylab = "Sobrevivientes",
col = "skyblue",
border = "blue")
# Cargar la base de datos Titanic y responder las siguientes preguntas
# ¿Los que estuvieron en la primera clase tuvieron más posibilidades de sobrevivir?
# ¿Sobrevivieron más mujeres y jóvenes que hombres?
# ¿Cuál fue la clase que tuvo mayor variabilidad en cuanto a las edades de los pasajeros?
# Comparar las distribuciones de las edades entre los que sobrevivieron y no sobrevivieron,
# ¿existen diferencias? -¿Existe relación entre el costo del ticket y la edad?
setwd("/Users/ppando/Materias/data/materias/exploracion-visualizacion/R/10-plotly-gganimate")
titanic <- read.table("titanic.csv", sep = ",", header = TRUE)
head(titanic)
sobrevivientes <- titanic %>% filter(Survived == 1)
hist(sobrevivientes$Pclass,
main = "Histograma de Sobrevivientes por clase",
xlab = "Clases",
ylab = "Sobrevivientes",
breaks = 1
col = "skyblue",
# ¿Cuál fue la clase que tuvo mayor variabilidad en cuanto a las edades de los pasajeros?
# Comparar las distribuciones de las edades entre los que sobrevivieron y no sobrevivieron,
# ¿existen diferencias? -¿Existe relación entre el costo del ticket y la edad?
setwd("/Users/ppando/Materias/data/materias/exploracion-visualizacion/R/10-plotly-gganimate")
titanic <- read.table("titanic.csv", sep = ",", header = TRUE)
head(titanic)
sobrevivientes <- titanic %>% filter(Survived == 1)
hist(sobrevivientes$Pclass,
main = "Histograma de Sobrevivientes por clase",
xlab = "Clases",
ylab = "Sobrevivientes",
breaks = 1,
col = "skyblue",
border = "blue")
# ¿Cuál fue la clase que tuvo mayor variabilidad en cuanto a las edades de los pasajeros?
# Comparar las distribuciones de las edades entre los que sobrevivieron y no sobrevivieron,
# ¿existen diferencias? -¿Existe relación entre el costo del ticket y la edad?
setwd("/Users/ppando/Materias/data/materias/exploracion-visualizacion/R/10-plotly-gganimate")
titanic <- read.table("titanic.csv", sep = ",", header = TRUE)
head(titanic)
sobrevivientes <- titanic %>% filter(Survived == 1)
hist(sobrevivientes$Pclass,
main = "Histograma de Sobrevivientes por clase",
xlab = "Clases",
ylab = "Sobrevivientes",
breaks = 3,
col = "skyblue",
border = "blue")
# Cargar la base de datos Titanic y responder las siguientes preguntas
# ¿Los que estuvieron en la primera clase tuvieron más posibilidades de sobrevivir?
# ¿Sobrevivieron más mujeres y jóvenes que hombres?
# ¿Cuál fue la clase que tuvo mayor variabilidad en cuanto a las edades de los pasajeros?
# Comparar las distribuciones de las edades entre los que sobrevivieron y no sobrevivieron,
# ¿existen diferencias? -¿Existe relación entre el costo del ticket y la edad?
setwd("/Users/ppando/Materias/data/materias/exploracion-visualizacion/R/10-plotly-gganimate")
titanic <- read.table("titanic.csv", sep = ",", header = TRUE)
head(titanic)
sobrevivientes <- titanic %>% filter(Survived == 1)
hist(sobrevivientes$Pclass,
main = "Histograma de Sobrevivientes por clase",
xlab = "Clases",
ylab = "Sobrevivientes",
breaks = "3",
col = "skyblue",
border = "blue")
class(sobrevivientes$Pclass)
